select * from employees;

create table person (
  id integer primary key,
  first_name varchar(50),
  last_name varchar(50),
  age integer
  
  );
  
CREATE TABLE pet (
    id INTEGER PRIMARY KEY,
    name VARCHAR(50),
    breed VARCHAR(50),
    age INTEGER,
    dead INTEGER
);
CREATE TABLE person_pet (
    person_id INTEGER,
    pet_id INTEGER
);

alter user ora1 identified by ora1;
insert into person (id, first_name, last_name,age)
  values (0,'Dave','Wolfe',25);
  
insert into pet (id, name, breed, age, dead)
  values (0,'Fluffy', 'Unicorn', 1000, 0);
  
insert into pet values (1, 'gigantor', 'robot', 1,1);  
insert into person_pet values (0,0);
insert into person (id, first_name, last_name,age)
  values (1,'Lee','Song',25);
insert into pet (id, name, breed, age, dead)
  values (2,'Scooby', 'Dog', 6, 0);
insert into person_pet values (0,1);  
insert into person_pet values (1,2);
update person_pet set person_id = 1

--ADD COMPANIES
--see how many customers are in our table:
select count(*) as "Customer Count" from customers;

--how many unique companies are in our table?
select count(distinct company)as "Distinct Companies" from customers ;

--add a column for the CompanyID to the customers table
alter table customers add CompanyID int;

--notice that the companyId is null
select companyID, company from customers;

select companyID, company from customers order by company;
--create a table for the companies
--this statement will also create a companyID column which will
--increment when you insert a new record
create table Companies (
companyID number generated by default on null as identity,
Company varchar(50)
);

--see what's in your companies table now
select * from Companies;

--add a test company to verify that the identity field works
insert into Companies(Company)values ('Dave Company');

--add unique companies from customers to the company table
insert into Companies (Company) select distinct company from customers;

--look at what you've done
select * from Companies;
--another way to select is to list the fields
select companyID, Company from customers;

--update the compnayId in the customers table
update customers c set c.companyID = (select t.companyID from
Companies t where t.company=c.company);

select companyid, company from customers order by companyid;

--query to check your data
select c.companyID,c.company,t.companyID,t.Company from
customers c inner join Companies t on c.CompanyID=t.CompanyID;

--remove the company column from the customers table. It is no longer needed
alter table customers drop column company;

--notice you won't see the company column
select * from customers;

-- a query to bring it all back together
select fullname, company from customers
inner join companies on 
customers.companyid=companies.companyid;

--ADD CITIES
--add a column for the CompanyID to the customers table
alter table customers add CityID int;
--create a table for the cities
--this statement will also create a cityID column which will
--increment when you insert a new record
create table Cities (
cityID number generated by default on null as identity,
City varchar(50)
);
--add unique cities from customers to the city table
insert into Cities(City) select distinct city from customers;
--update the cityId in the customers table
update customers c set c.cityID = (select t.cityID from
Cities t where t.city=c.city);
--remove the city column from the customers table. It is no longer needed
alter table customers drop column city;

-- a query to bring it all back together
select fullname, city from customers
inner join cities on 
customers.cityid=cities.cityid;
-- alternate of above
select c.fullname, t.city from customers c
inner join cities t on 
c.cityid=t.cityid;

--ADD STATES

--how many unique states are in our table?
select count(distinct state) as "Distinct States" from customers ;

--add a column for the StateID to the customers table
alter table customers add StateID int;

--notice that the companyId is null
select stateID, state from customers;

select stateID, state from customers order by state;
--create a table for the states
--this statement will also create a stateID column which will
--increment when you insert a new record
create table States (
stateID number generated by default on null as identity,
State varchar(50)
);

--see what's in your companies table now
select * from States;

--add unique states from customers to the state table
insert into States (state) select distinct state from customers;

--look at what you've done
select * from States;
--another way to select is to list the fields
select stateID, state from customers;

--update the stateId in the customers table
update customers c set c.stateID = (select t.stateID from
States t where t.state=c.state);

select stateid, state from customers order by stateid;

--query to check your data
select c.stateID,c.state,t.stateID,t.state from
customers c inner join States t on c.stateID=t.stateID;

--remove the state column from the customers table. It is no longer needed
alter table customers drop column state;

--notice you won't see the state column
select * from customers;

-- a query to bring it all back together
select fullname, state from customers
inner join states on 
customers.stateid=states.stateid;

--ADD POSITIONS

--how many unique positions are in our table?
select count(distinct position) as "Distinct Positions" from customers;

--add a column for the PositionID to the customers table
alter table customers add PositionID int;

--notice that the companyId is null
select positionID, position from customers;

select positionID, position from customers order by position;
--create a table for the states
--this statement will also create a stateID column which will
--increment when you insert a new record
create table Positions (
positionID number generated by default on null as identity,
position varchar(60)
);

--see what's in your companies table now
select * from Positions;

--add unique states from customers to the state table
insert into Positions (position) select distinct position from customers;

--look at what you've done
select * from Positions;
--another way to select is to list the fields
select positionID, position from customers;

--update the stateId in the customers table
update customers c set c.positionID = (select t.positionID from
Positions t where t.position=c.position);

select positionid, position from customers order by positionid;

--query to check your data
select c.positionID,c.position,t.positionID,t.position from
customers c inner join Positions t on c.positionID=t.positionID;

--remove the state column from the customers table. It is no longer needed
alter table customers drop column position;

--notice you won't see the position column
select * from customers;

-- a query to bring it all back together
select fullname, position from customers
inner join Positions on 
customers.positionid=Positions.positionid;

--count rows in table
SELECT COUNT(*) FROM customers;

select count(distinct fullname) as "Distinct customers" from customers;
select count(distinct emailaddress) as "Distinct customers" from customers;

-- ADD CUSTOMER ID

alter table customers add customerid number;

update customers set customerid=rownum;

select customerid, lastname from customers order by lastname;
select * from companies where companyid=10;
select * from companies;

--CREATE Bullhorn tables for Oracle
--------------------------------------------------------
--  File created - Tuesday-July-05-2016   
--------------------------------------------------------
--DROP TABLE "ORA1"."BHPOST";
--DROP TABLE "ORA1"."BHUSER";
--------------------------------------------------------
--  DDL for Table BHPOST
--------------------------------------------------------

  CREATE TABLE "ORA1"."BHPOST"
   (    "POSTID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ,
    "POSTDATE" DATE DEFAULT NULL,
    "POSTTEXT" VARCHAR2(141 BYTE) DEFAULT NULL,
    "BHUSERID" NUMBER DEFAULT NULL
   ) ;
--------------------------------------------------------
--  DDL for Table BHUSER
--------------------------------------------------------

  CREATE TABLE "ORA1"."BHUSER"
   (    "BHUSERID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ,
    "USERNAME" VARCHAR2(50 BYTE),
    "USERPASSWORD" VARCHAR2(50 BYTE),
    "MOTTO" VARCHAR2(100 BYTE) DEFAULT NULL,
    "USEREMAIL" VARCHAR2(100 BYTE),
    "JOINDATE" DATE DEFAULT NULL
   ) ;
REM INSERTING into ORA1.BHPOST
SET DEFINE OFF;
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (21,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 8',2);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (8,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 1',1);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (9,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 2',2);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (10,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 3',3);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (11,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 4',4);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (12,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 5',4);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (13,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 6',3);
Insert into ORA1.BHPOST (POSTID,POSTDATE,POSTTEXT,BHUSERID) values (14,to_date('16-JUN-16','DD-MON-RR'),'This is a sample post 7',1);
REM INSERTING into ORA1.BHUSER
SET DEFINE OFF;
Insert into ORA1.BHUSER (BHUSERID,USERNAME,USERPASSWORD,MOTTO,USEREMAIL,JOINDATE) values (1,'user 1','password','motto for user 1','user1@domain.com',to_date('16-JUN-16','DD-MON-RR'));
Insert into ORA1.BHUSER (BHUSERID,USERNAME,USERPASSWORD,MOTTO,USEREMAIL,JOINDATE) values (2,'user 2','password','motto for user 2','user2@domain.com',to_date('16-JUN-16','DD-MON-RR'));
Insert into ORA1.BHUSER (BHUSERID,USERNAME,USERPASSWORD,MOTTO,USEREMAIL,JOINDATE) values (3,'user 3','password','motto for user 3','user3@domain.com',to_date('16-JUN-16','DD-MON-RR'));
Insert into ORA1.BHUSER (BHUSERID,USERNAME,USERPASSWORD,MOTTO,USEREMAIL,JOINDATE) values (4,'user 4','password','motto for user 4','user4@domain.com',to_date('16-JUN-16','DD-MON-RR'));
--------------------------------------------------------
--  DDL for Index BHPOST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORA1"."BHPOST_PK" ON "ORA1"."BHPOST" ("POSTID")
  ;
--------------------------------------------------------
--  DDL for Index BHUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORA1"."BHUSER_PK" ON "ORA1"."BHUSER" ("BHUSERID")
  ;
--------------------------------------------------------
--  Constraints for Table BHPOST
--------------------------------------------------------

  ALTER TABLE "ORA1"."BHPOST" ADD CONSTRAINT "BHPOST_PK" PRIMARY KEY ("POSTID")
  USING INDEX  ENABLE;
  ALTER TABLE "ORA1"."BHPOST" MODIFY ("POSTID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BHUSER
--------------------------------------------------------

  ALTER TABLE "ORA1"."BHUSER" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "ORA1"."BHUSER" MODIFY ("USERPASSWORD" NOT NULL ENABLE);
  ALTER TABLE "ORA1"."BHUSER" MODIFY ("USEREMAIL" NOT NULL ENABLE);
  ALTER TABLE "ORA1"."BHUSER" ADD CONSTRAINT "BHUSER_PK" PRIMARY KEY ("BHUSERID")
  USING INDEX  ENABLE;
  ALTER TABLE "ORA1"."BHUSER" MODIFY ("BHUSERID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table BHPOST
--------------------------------------------------------

  ALTER TABLE "ORA1"."BHPOST" ADD CONSTRAINT "FK_BHUSERID" FOREIGN KEY ("BHUSERID")
      REFERENCES "ORA1"."BHUSER" ("BHUSERID") DEFERRABLE INITIALLY DEFERRED ENABLE;
      
      
